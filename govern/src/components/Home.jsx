import React, { useState, useEffect } from 'react';
import AOS from 'aos';
import 'aos/dist/aos.css';
import './home.css';

const Home = () => {
  const [currentLang, setCurrentLang] = useState('en');
  const [isNavOpen, setIsNavOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  const [activeNavItem, setActiveNavItem] = useState('home');
  const [showMobileMenu, setShowMobileMenu] = useState(false);

  const languages = {
    en: { name: 'English', code: 'en' },
    hi: { name: 'рд╣рд┐рдВрджреА', code: 'hi' },
    ta: { name: 'родрооро┐ро┤рпН', code: 'ta' },
    te: { name: 'р░др▒Жр░▓р▒Бр░Чр▒Б', code: 'te' },
    bn: { name: 'ржмрж╛ржВрж▓рж╛', code: 'bn' }
  };

  // Navigation items with icons
  const navItems = [
    { id: 'home', icon: 'ЁЯПа', label: 'Home', href: '#home' },
    { id: 'schemes', icon: 'ЁЯУЛ', label: 'All Schemes', href: '#schemes' },
    { id: 'categories', icon: 'ЁЯУС', label: 'Categories', href: '#categories' },
    { id: 'eligibility', icon: 'тЬЕ', label: 'Check Eligibility', href: '#eligibility' },
    { id: 'application', icon: 'ЁЯУЭ', label: 'Application Status', href: '#application' },
    { id: 'documents', icon: 'ЁЯУД', label: 'Documents', href: '#documents' },
    { id: 'faqs', icon: 'тЭУ', label: 'FAQs', href: '#faqs' },
    { id: 'contact', icon: 'ЁЯУЮ', label: 'Contact Us', href: '#contact' }
  ];

  // Sample government schemes data
  const schemesData = {
    en: [
      {
        id: 1,
        name: "PM Kisan Samman Nidhi",
        description: "Financial support to farmers with direct benefit transfer of тВ╣6000 per year",
        category: "Agriculture",
        benefits: ["тВ╣6000 annual support", "Direct bank transfer", "Small & marginal farmers"],
        isNew: true,
        icon: "ЁЯМ╛",
        gradient: "gradient-1"
      },
      {
        id: 2,
        name: "Ayushman Bharat - PMJAY",
        description: "Health insurance coverage of тВ╣5 lakh per family per year for secondary and tertiary care",
        category: "Healthcare",
        benefits: ["тВ╣5 lakh coverage", "1350+ medical packages", "Free treatment"],
        isNew: false,
        icon: "ЁЯПе",
        gradient: "gradient-2"
      },
      {
        id: 3,
        name: "PM Awas Yojana",
        description: "Affordable housing scheme providing financial assistance for house construction",
        category: "Housing",
        benefits: ["тВ╣2.5 lakh subsidy", "Interest subsidy", "Affordable housing"],
        isNew: false,
        icon: "ЁЯПа",
        gradient: "gradient-3"
      }
    ],
    hi: [
      {
        id: 1,
        name: "рдкреАрдПрдо рдХрд┐рд╕рд╛рди рд╕рдореНрдорд╛рди рдирд┐рдзрд┐",
        description: "рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЛ тВ╣6000 рдкреНрд░рддрд┐ рд╡рд░реНрд╖ рдХреА рдкреНрд░рддреНрдпрдХреНрд╖ рд╡рд┐рддреНрддреАрдп рд╕рд╣рд╛рдпрддрд╛",
        category: "рдХреГрд╖рд┐",
        benefits: ["тВ╣6000 рд╡рд╛рд░реНрд╖рд┐рдХ рд╕рд╣рд╛рдпрддрд╛", "рд╕реАрдзреЗ рдмреИрдВрдХ рд╣рд╕реНрддрд╛рдВрддрд░рдг", "рдЫреЛрдЯреЗ рдФрд░ рд╕реАрдорд╛рдВрдд рдХрд┐рд╕рд╛рди"],
        isNew: true,
        icon: "ЁЯМ╛",
        gradient: "gradient-1"
      },
      {
        id: 2,
        name: "рдЖрдпреБрд╖реНрдорд╛рди рднрд╛рд░рдд - рдкреАрдПрдордЬреЗрдПрд╡рд╛рдИ",
        description: "рдорд╛рдзреНрдпрдорд┐рдХ рдФрд░ рддреГрддреАрдпрдХ рджреЗрдЦрднрд╛рд▓ рдХреЗ рд▓рд┐рдП рдкреНрд░рддрд┐ рдкрд░рд┐рд╡рд╛рд░ рдкреНрд░рддрд┐ рд╡рд░реНрд╖ тВ╣5 рд▓рд╛рдЦ рдХрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдмреАрдорд╛",
        category: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛",
        benefits: ["тВ╣5 рд▓рд╛рдЦ рдХрд╡рд░реЗрдЬ", "1350+ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдкреИрдХреЗрдЬ", "рдореБрдлреНрдд рдЗрд▓рд╛рдЬ"],
        isNew: false,
        icon: "ЁЯПе",
        gradient: "gradient-2"
      },
      {
        id: 3,
        name: "рдкреАрдПрдо рдЖрд╡рд╛рд╕ рдпреЛрдЬрдирд╛",
        description: "рдШрд░ рдирд┐рд░реНрдорд╛рдг рдХреЗ рд▓рд┐рдП рд╡рд┐рддреНрддреАрдп рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рджрд╛рди рдХрд░рдиреЗ рд╡рд╛рд▓реА рдХрд┐рдлрд╛рдпрддреА рдЖрд╡рд╛рд╕ рдпреЛрдЬрдирд╛",
        category: "рдЖрд╡рд╛рд╕",
        benefits: ["тВ╣2.5 рд▓рд╛рдЦ рд╕рдмреНрд╕рд┐рдбреА", "рдмреНрдпрд╛рдЬ рд╕рдмреНрд╕рд┐рдбреА", "рдХрд┐рдлрд╛рдпрддреА рдЖрд╡рд╛рд╕"],
        isNew: false,
        icon: "ЁЯПа",
        gradient: "gradient-3"
      }
    ],
    ta: [
      {
        id: 1,
        name: "рокро┐роОроорпН роХро┐роЪро╛ройрпН роЪроорпНрооро╛ройрпН роиро┐родро┐",
        description: "ро╡ро┐ро╡роЪро╛ропро┐роХро│рпБроХрпНроХрпБ роЖрогрпНроЯрпБроХрпНроХрпБ тВ╣6000 роирпЗро░роЯро┐ роиро┐родро┐ роЙродро╡ро┐",
        category: "ро╡ро┐ро╡роЪро╛ропроорпН",
        benefits: ["тВ╣6000 роЖрогрпНроЯрпБ роЙродро╡ро┐", "роирпЗро░роЯро┐ ро╡роЩрпНроХро┐ рокро░ро┐рооро╛ро▒рпНро▒роорпН", "роЪро┐ро▒рпБ рооро▒рпНро▒рпБроорпН роХрпБро▒рпБ ро╡ро┐ро╡роЪро╛ропро┐роХро│рпН"],
        isNew: true,
        icon: "ЁЯМ╛",
        gradient: "gradient-1"
      },
      {
        id: 2,
        name: "роЖропрпБро╖рпНрооро╛ройрпН рокро╛ро░родрпН - рокро┐роОроорпНроЬрпЗроПроТропрпН",
        description: "роЗро░рогрпНроЯро╛роорпН роиро┐ро▓рпИ рооро▒рпНро▒рпБроорпН роорпВройрпНро▒ро╛роорпН роиро┐ро▓рпИ роЪро┐роХро┐роЪрпНроЪрпИроХрпНроХрпБ роХрпБроЯрпБроорпНрокродрпНродро┐ро▒рпНроХрпБ роЖрогрпНроЯрпБроХрпНроХрпБ тВ╣5 ро▓роЯрпНроЪроорпН роЪрпБроХро╛родро╛ро░ роХро╛рокрпНрокрпАроЯрпБ",
        category: "роЪрпБроХро╛родро╛ро░роорпН",
        benefits: ["тВ╣5 ро▓роЯрпНроЪроорпН роХро╛рокрпНрокрпАроЯрпБ", "1350+ рооро░рпБродрпНродрпБро╡ родрпКроХрпБрокрпНрокрпБроХро│рпН", "роЗро▓ро╡роЪ роЪро┐роХро┐роЪрпНроЪрпИ"],
        isNew: false,
        icon: "ЁЯПе",
        gradient: "gradient-2"
      },
      {
        id: 3,
        name: "рокро┐роОроорпН роЖро╡ро╛ро╕рпН ропрпЛроЬройро╛",
        description: "ро╡рпАроЯрпБ роХроЯрпНроЯрпБро╡родро▒рпНроХрпБ роиро┐родро┐ роЙродро╡ро┐ ро╡ро┤роЩрпНроХрпБроорпН рооро▓ро┐ро╡рпБ ро╡ро┐ро▓рпИ ро╡рпАроЯрпНроЯрпБ родро┐роЯрпНроЯроорпН",
        category: "ро╡рпАроЯрпНроЯрпБро╡роЪродро┐",
        benefits: ["тВ╣2.5 ро▓роЯрпНроЪроорпН рооро╛ройро┐ропроорпН", "ро╡роЯрпНроЯро┐ рооро╛ройро┐ропроорпН", "рооро▓ро┐ро╡рпБ ро╡ро┐ро▓рпИ ро╡рпАроЯрпБ"],
        isNew: false,
        icon: "ЁЯПа",
        gradient: "gradient-3"
      }
    ],
    te: [
      {
        id: 1,
        name: "р░кр░┐р░Ор░В р░Хр░┐р░╕р░╛р░ир▒Н р░╕р░ор▒Нр░ор░╛р░ир▒Н р░ир░┐р░зр░┐",
        description: "р░░р▒Ир░др▒Бр░▓р░Хр▒Б р░╕р░Вр░╡р░др▒Нр░╕р░░р░╛р░ир░┐р░Хр░┐ тВ╣6000 р░кр▒Нр░░р░др▒Нр░пр░Хр▒Нр░╖ р░Жр░░р▒Нр░ер░┐р░Х р░╕р░╣р░╛р░пр░В",
        category: "р░╡р▒Нр░пр░╡р░╕р░╛р░пр░В",
        benefits: ["тВ╣6000 р░╡р░╛р░░р▒Нр░╖р░┐р░Х р░╕р░╣р░╛р░пр░В", "р░ир▒Зр░░р▒Бр░Чр░╛ р░мр▒Нр░пр░╛р░Вр░Хр▒Н р░мр░жр░┐р░▓р▒А", "р░Ър░┐р░ир▒Нр░и р░ор░░р░┐р░пр▒Б р░╕р░ир▒Нр░и р░░р▒Ир░др▒Бр░▓р▒Б"],
        isNew: true,
        icon: "ЁЯМ╛",
        gradient: "gradient-1"
      },
      {
        id: 2,
        name: "р░Жр░пр▒Бр░╖р▒Нр░ор░╛р░ир▒Н р░нр░╛р░░р░др▒Н - р░кр░┐р░Ор░Вр░Ьр▒Жр░Пр░╡р▒И",
        description: "р░жр▒Нр░╡р░┐р░др▒Ар░п р░ор░░р░┐р░пр▒Б р░др▒Гр░др▒Ар░п р░╕р░Вр░░р░Хр▒Нр░╖р░г р░Хр▒Лр░╕р░В р░Хр▒Бр░Яр▒Бр░Вр░мр░╛р░ир░┐р░Хр░┐ р░╕р░Вр░╡р░др▒Нр░╕р░░р░╛р░ир░┐р░Хр░┐ тВ╣5 р░▓р░Хр▒Нр░╖р░▓ р░Жр░░р▒Лр░Чр▒Нр░п р░мр▒Ар░ор░╛",
        category: "р░Жр░░р▒Лр░Чр▒Нр░п р░╕р░Вр░░р░Хр▒Нр░╖р░г",
        benefits: ["тВ╣5 р░▓р░Хр▒Нр░╖р░▓ р░Хр░╡р░░р▒Зр░Ьр▒А", "1350+ р░╡р▒Ир░жр▒Нр░п р░кр▒Нр░пр░╛р░Хр▒Зр░Ьр▒Ар░▓р▒Б", "р░Йр░Ър░┐р░д р░Ър░┐р░Хр░┐р░др▒Нр░╕"],
        isNew: false,
        icon: "ЁЯПе",
        gradient: "gradient-2"
      }
    ],
    bn: [
      {
        id: 1,
        name: "ржкрж┐ржПржо ржХрж┐рж╖рж╛ржг рж╕ржорзНржорж╛ржи ржирж┐ржзрж┐",
        description: "ржХрзГрж╖ржХржжрзЗрж░ ржмржЫрж░рзЗ тВ╣6000 рж╕рж░рж╛рж╕рж░рж┐ ржЖрж░рзНржерж┐ржХ рж╕рж╣рж╛ржпрж╝рждрж╛",
        category: "ржХрзГрж╖рж┐",
        benefits: ["тВ╣6000 ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рж╣рж╛ржпрж╝рждрж╛", "рж╕рж░рж╛рж╕рж░рж┐ ржмрзНржпрж╛ржВржХ рж╕рзНржерж╛ржирж╛ржирзНрждрж░", "ржХрзНрж╖рзБржжрзНрж░ ржУ ржкрзНрж░рж╛ржирзНрждрж┐ржХ ржХрзГрж╖ржХ"],
        isNew: true,
        icon: "ЁЯМ╛",
        gradient: "gradient-1"
      },
      {
        id: 2,
        name: "ржЖржпрж╝рзБрж╖рзНржорж╛ржи ржнрж╛рж░ржд - ржкрж┐ржПржоржЬрзЗржПржУржпрж╝рж╛ржЗ",
        description: "ржжрзНржмрж┐рждрзАржпрж╝ ржПржмржВ рждрзГрждрзАржпрж╝ ржкрж░рзНржпрж╛ржпрж╝рзЗрж░ ржпрждрзНржирзЗрж░ ржЬржирзНржп ржкрж░рж┐ржмрж╛рж░ ржкрзНрж░рждрж┐ ржмржЫрж░рзЗ тВ╣5 рж▓ржХрзНрж╖ рж╕рзНржмрж╛рж╕рзНржерзНржп ржмрзАржорж╛",
        category: "рж╕рзНржмрж╛рж╕рзНржерзНржпрж╕рзЗржмрж╛",
        benefits: ["тВ╣5 рж▓ржХрзНрж╖ ржХржнрж╛рж░рзЗржЬ", "1350+ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржкрзНржпрж╛ржХрзЗржЬ", "ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЪрж┐ржХрж┐рзОрж╕рж╛"],
        isNew: false,
        icon: "ЁЯПе",
        gradient: "gradient-2"
      }
    ]
  };

  const content = {
    en: {
      title: 'Government Schemes Portal',
      subtitle: 'Your Gateway to All Government Benefits',
      searchPlaceholder: 'Search for schemes...',
      categories: ['Education', 'Healthcare', 'Agriculture', 'Business', 'Women & Child', 'Senior Citizens'],
      stats: [
        { number: '500+', label: 'Active Schemes', icon: 'ЁЯУК' },
        { number: '10M+', label: 'Beneficiaries', icon: 'ЁЯСе' },
        { number: '24/7', label: 'Support', icon: 'ЁЯЪА' },
        { number: '100%', label: 'Free Service', icon: 'тЬи' }
      ],
      buttons: {
        learnMore: 'Learn More',
        applyNow: 'Apply Now',
        viewAll: 'View All Schemes',
        login: 'Login'
      }
    },
    hi: {
      title: 'рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рдкреЛрд░реНрдЯрд▓',
      subtitle: 'рд╕рднреА рд╕рд░рдХрд╛рд░реА рд▓рд╛рднреЛрдВ рдХрд╛ рдЖрдкрдХрд╛ рдкреНрд░рд╡реЗрд╢ рджреНрд╡рд╛рд░',
      searchPlaceholder: 'рдпреЛрдЬрдирд╛рдУрдВ рдХреА рдЦреЛрдЬ рдХрд░реЗрдВ...',
      categories: ['рд╢рд┐рдХреНрд╖рд╛', 'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛', 'рдХреГрд╖рд┐', 'рд╡реНрдпрд╛рдкрд╛рд░', 'рдорд╣рд┐рд▓рд╛ рдПрд╡рдВ рдмрд╛рд▓', 'рд╡рд░рд┐рд╖реНрда рдирд╛рдЧрд░рд┐рдХ'],
      stats: [
        { number: '500+', label: 'рд╕рдХреНрд░рд┐рдп рдпреЛрдЬрдирд╛рдПрдВ', icon: 'ЁЯУК' },
        { number: '10M+', label: 'рд▓рд╛рднрд╛рд░реНрдереА', icon: 'ЁЯСе' },
        { number: '24/7', label: 'рд╕рд╣рд╛рдпрддрд╛', icon: 'ЁЯЪА' },
        { number: '100%', label: 'рдореБрдлреНрдд рд╕реЗрд╡рд╛', icon: 'тЬи' }
      ],
      buttons: {
        learnMore: 'рдФрд░ рдЬрд╛рдиреЗрдВ',
        applyNow: 'рдЕрднреА рдЖрд╡реЗрджрди рдХрд░реЗрдВ',
        viewAll: 'рд╕рднреА рдпреЛрдЬрдирд╛рдПрдВ рджреЗрдЦреЗрдВ',
        login: 'рд▓реЙрдЧрд┐рди'
      }
    },
    ta: {
      title: 'роЕро░роЪрпБ родро┐роЯрпНроЯроЩрпНроХро│рпН рокрпЛро░рпНроЯро▓рпН',
      subtitle: 'роЕройрпИродрпНродрпБ роЕро░роЪрпБ роиро▓ройрпНроХро│рпБроХрпНроХро╛рой роЙроЩрпНроХро│рпН роирпБро┤рпИро╡ро╛ропро┐ро▓рпН',
      searchPlaceholder: 'родро┐роЯрпНроЯроЩрпНроХро│рпИродрпН родрпЗроЯрпБроХ...',
      categories: ['роХро▓рпНро╡ро┐', 'роЪрпБроХро╛родро╛ро░роорпН', 'ро╡ро┐ро╡роЪро╛ропроорпН', 'ро╡рогро┐роХроорпН', 'рокрпЖрогрпНроХро│рпН & роХрпБро┤роирпНродрпИроХро│рпН', 'роорпВродрпНрод роХрпБроЯро┐роороХрпНроХро│рпН'],
      stats: [
        { number: '500+', label: 'роЪрпЖропро▓ро┐ро▓рпН роЙро│рпНро│ родро┐роЯрпНроЯроЩрпНроХро│рпН', icon: 'ЁЯУК' },
        { number: '10M+', label: 'рокропройро╛ро│ро┐роХро│рпН', icon: 'ЁЯСе' },
        { number: '24/7', label: 'роЖродро░ро╡рпБ', icon: 'ЁЯЪА' },
        { number: '100%', label: 'роЗро▓ро╡роЪ роЪрпЗро╡рпИ', icon: 'тЬи' }
      ],
      buttons: {
        learnMore: 'роорпЗро▓рпБроорпН роЕро▒ро┐роХ',
        applyNow: 'роЗрокрпНрокрпЛродрпБ ро╡ро┐рогрпНрогрокрпНрокро┐роХрпНроХро╡рпБроорпН',
        viewAll: 'роЕройрпИродрпНродрпБ родро┐роЯрпНроЯроЩрпНроХро│рпИропрпБроорпН роХро╛рогрпНроХ',
        login: 'роЙро│рпНроирпБро┤рпИроп'
      }
    },
    te: {
      title: 'р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡ р░кр░ер░Хр░╛р░▓ р░кр▒Лр░░р▒Нр░Яр░▓р▒Н',
      subtitle: 'р░Ер░ир▒Нр░ир░┐ р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡ р░кр▒Нр░░р░пр▒Лр░Ьр░ир░╛р░▓р░Хр▒Б р░ор▒А р░Чр▒Зр░Яр▒НтАМр░╡р▒З',
      searchPlaceholder: 'р░кр░ер░Хр░╛р░▓ р░Хр▒Лр░╕р░В р░╡р▒Жр░др░Хр░Вр░бр░┐...',
      categories: ['р░╡р░┐р░жр▒Нр░п', 'р░Жр░░р▒Лр░Чр▒Нр░п р░╕р░Вр░░р░Хр▒Нр░╖р░г', 'р░╡р▒Нр░пр░╡р░╕р░╛р░пр░В', 'р░╡р▒Нр░пр░╛р░кр░╛р░░р░В', 'р░ор░╣р░┐р░│р░▓р▒Б & р░кр░┐р░▓р▒Нр░▓р░▓р▒Б', 'р░╕р▒Ар░ир░┐р░пр░░р▒Н р░кр▒Мр░░р▒Бр░▓р▒Б'],
      stats: [
        { number: '500+', label: 'р░Хр▒Нр░░р░┐р░пр░╛р░╢р▒Ар░▓ р░кр░ер░Хр░╛р░▓р▒Б', icon: 'ЁЯУК' },
        { number: '10M+', label: 'р░▓р░мр▒Нр░зр░┐р░жр░╛р░░р▒Бр░▓р▒Б', icon: 'ЁЯСе' },
        { number: '24/7', label: 'р░ор░жр▒Нр░жр░др▒Б', icon: 'ЁЯЪА' },
        { number: '100%', label: 'р░Йр░Ър░┐р░д р░╕р▒Зр░╡', icon: 'тЬи' }
      ],
      buttons: {
        learnMore: 'р░ор░░р░┐р░Вр░д р░др▒Жр░▓р▒Бр░╕р▒Бр░Хр▒Лр░Вр░бр░┐',
        applyNow: 'р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░Ър▒Зр░╕р▒Бр░Хр▒Лр░Вр░бр░┐',
        viewAll: 'р░Ер░ир▒Нр░ир░┐ р░кр░ер░Хр░╛р░▓р░ир▒Б р░Ър▒Вр░бр░Вр░бр░┐',
        login: 'р░▓р░╛р░Чр░┐р░ир▒Н'
      }
    },
    bn: {
      title: 'рж╕рж░ржХрж╛рж░рж┐ ржкрзНрж░ржХрж▓рзНржк ржкрзЛрж░рзНржЯрж╛рж▓',
      subtitle: 'рж╕ржорж╕рзНржд рж╕рж░ржХрж╛рж░рж┐ рж╕рзБржмрж┐ржзрж╛рж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржкрзНрж░ржмрзЗрж╢ржжрзНржмрж╛рж░',
      searchPlaceholder: 'ржкрзНрж░ржХрж▓рзНржкржЧрзБрж▓рж┐ ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи...',
      categories: ['рж╢рж┐ржХрзНрж╖рж╛', 'рж╕рзНржмрж╛рж╕рзНржерзНржпрж╕рзЗржмрж╛', 'ржХрзГрж╖рж┐', 'ржмрзНржпржмрж╕рж╛', 'ржорж╣рж┐рж▓рж╛ ржУ рж╢рж┐рж╢рзБ', 'ржкрзНрж░ржмрзАржг ржирж╛ржЧрж░рж┐ржХ'],
      stats: [
        { number: '500+', label: 'рж╕ржХрзНрж░рж┐ржпрж╝ ржкрзНрж░ржХрж▓рзНржк', icon: 'ЁЯУК' },
        { number: '10M+', label: 'рж╕рзБржмрж┐ржзрж╛ржнрзЛржЧрзА', icon: 'ЁЯСе' },
        { number: '24/7', label: 'рж╕рж╣рж╛ржпрж╝рждрж╛', icon: 'ЁЯЪА' },
        { number: '100%', label: 'ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ рж╕рзЗржмрж╛', icon: 'тЬи' }
      ],
      buttons: {
        learnMore: 'ржЖрж░ржУ ржЬрж╛ржирзБржи',
        applyNow: 'ржПржЦржи ржЖржмрзЗржжржи ржХрж░рзБржи',
        viewAll: 'рж╕ржорж╕рзНржд ржкрзНрж░ржХрж▓рзНржк ржжрзЗржЦрзБржи',
        login: 'рж▓ржЧржЗржи'
      }
    }
  };

  useEffect(() => {
    AOS.init({
      duration: 1000,
      easing: 'ease-in-out',
      once: false,
      mirror: true,
      anchorPlacement: 'top-bottom',
    });

    const handleScroll = () => {
      setScrolled(window.scrollY > 50);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const currentContent = content[currentLang];
  const currentSchemes = schemesData[currentLang] || schemesData['en'];

  return (
    <div className="home-container">
      {/* Mobile Top Navigation Bar */}
      <nav className={`navbar ${scrolled ? 'scrolled' : ''}`}>
        <div className="nav-container">
          <div className="nav-left">
            <button 
              className="nav-toggle mobile-only"
              onClick={() => setIsNavOpen(!isNavOpen)}
            >
              <span className={`toggle-icon ${isNavOpen ? 'open' : ''}`}>
                <span></span>
                <span></span>
                <span></span>
              </span>
            </button>
            <div className="nav-logo" data-aos="fade-right">
              <div className="logo-icon">
                <span>GS</span>
              </div>
              <span className="logo-text desktop-only">GovSchemes</span>
            </div>
          </div>

          <div className="nav-actions" data-aos="fade-left">
            <div className="language-selector mobile-compact">
              <select 
                value={currentLang} 
                onChange={(e) => setCurrentLang(e.target.value)}
                className="lang-dropdown"
              >
                {Object.entries(languages).map(([code, lang]) => (
                  <option key={code} value={code}>{code.toUpperCase()}</option>
                ))}
              </select>
            </div>

            <button className="login-btn mobile-icon-only">
              <svg className="login-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
              <span className="desktop-only">{currentContent.buttons.login}</span>
            </button>

            <button 
              className="mobile-menu-btn desktop-hidden"
              onClick={() => setShowMobileMenu(!showMobileMenu)}
            >
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
          </div>
        </div>
      </nav>

      {/* Mobile Bottom Navigation */}
      <nav className="mobile-bottom-nav">
        <a href="#home" className={`bottom-nav-item ${activeNavItem === 'home' ? 'active' : ''}`} onClick={() => setActiveNavItem('home')}>
          <span className="nav-icon">ЁЯПа</span>
          <span className="nav-label">Home</span>
        </a>
        <a href="#schemes" className={`bottom-nav-item ${activeNavItem === 'schemes' ? 'active' : ''}`} onClick={() => setActiveNavItem('schemes')}>
          <span className="nav-icon">ЁЯУЛ</span>
          <span className="nav-label">Schemes</span>
        </a>
        <a href="#eligibility" className={`bottom-nav-item ${activeNavItem === 'eligibility' ? 'active' : ''}`} onClick={() => setActiveNavItem('eligibility')}>
          <span className="nav-icon">тЬЕ</span>
          <span className="nav-label">Check</span>
        </a>
        <a href="#application" className={`bottom-nav-item ${activeNavItem === 'application' ? 'active' : ''}`} onClick={() => setActiveNavItem('application')}>
          <span className="nav-icon">ЁЯУЭ</span>
          <span className="nav-label">Apply</span>
        </a>
      </nav>

      {/* Mobile Slide Menu */}
      <div className={`mobile-slide-menu ${showMobileMenu ? 'open' : ''}`}>
        <div className="slide-menu-header">
          <h3>Menu</h3>
          <button onClick={() => setShowMobileMenu(false)}>├Ч</button>
        </div>
        <ul className="slide-menu-links">
          {navItems.map((item) => (
            <li key={item.id}>
              <a href={item.href} onClick={() => {
                setActiveNavItem(item.id);
                setShowMobileMenu(false);
              }}>
                <span className="nav-icon">{item.icon}</span>
                <span>{item.label}</span>
              </a>
            </li>
          ))}
        </ul>
      </div>

      {/* Desktop Side Navigation */}
      <aside className={`side-nav desktop-only ${isNavOpen ? 'open' : 'closed'}`}>
        <div className="side-nav-content">
          <ul className="side-nav-links">
            {navItems.map((item, index) => (
              <li key={item.id}>
                <a 
                  href={item.href} 
                  className={`nav-link ${activeNavItem === item.id ? 'active' : ''}`}
                  onClick={() => setActiveNavItem(item.id)}
                  data-aos="fade-right" 
                  data-aos-delay={index * 50}
                >
                  <span className="nav-icon">{item.icon}</span>
                  <span className="nav-label">{item.label}</span>
                </a>
              </li>
            ))}
          </ul>

          <div className="nav-footer">
            <div className="nav-stats">
              <div className="stat-mini">
                <span className="stat-value">24/7</span>
                <span className="stat-label">Support</span>
              </div>
            </div>
          </div>
        </div>
      </aside>

      {/* Main Content */}
      <main className={`main-content ${isNavOpen ? 'nav-open' : 'nav-closed'}`}>
        {/* Hero Section */}
        <section className="hero">
          <div className="hero-background">
            <div className="gradient-overlay"></div>
            <div className="animated-shapes">
              <div className="shape shape-1" data-aos="zoom-in" data-aos-delay="200"></div>
              <div className="shape shape-2" data-aos="zoom-in" data-aos-delay="400"></div>
              <div className="shape shape-3" data-aos="zoom-in" data-aos-delay="600"></div>
            </div>
          </div>

          <div className="hero-content">
            <h1 className="hero-title" data-aos="fade-up" data-aos-delay="100">
              {currentContent.title}
            </h1>
            <p className="hero-subtitle" data-aos="fade-up" data-aos-delay="200">
              {currentContent.subtitle}
            </p>

            <div className="search-container" data-aos="fade-up" data-aos-delay="300">
              <input 
                type="text" 
                placeholder={currentContent.searchPlaceholder}
                className="search-input"
              />
              <button className="search-btn">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </button>
            </div>

            <div className="quick-filters" data-aos="fade-up" data-aos-delay="400">
              <button className="filter-chip">Central Government</button>
              <button className="filter-chip">Tamil Nadu</button>
              <button className="filter-chip">New Schemes</button>
              <button className="filter-chip">Most Popular</button>
            </div>
          </div>
        </section>

        {/* Stats Section */}
        <section className="stats-section">
          <div className="stats-container">
            {currentContent.stats.map((stat, index) => (
              <div 
                key={index} 
                className="stat-card"
                data-aos="flip-left"
                data-aos-delay={index * 100}
              >
                <div className="stat-icon">{stat.icon}</div>
                <h3 className="stat-number" data-aos="zoom-in" data-aos-delay={index * 100 + 200}>
                  {stat.number}
                </h3>
                <p className="stat-label">{stat.label}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Categories Section */}
        <section className="categories-section">
          <h2 className="section-title" data-aos="fade-up">Explore by Category</h2>
          <div className="categories-grid">
            {currentContent.categories.map((category, index) => (
              <div 
                key={index} 
                className="category-card"
                data-aos="fade-up"
                data-aos-delay={index * 100}
                data-aos-offset="100"
              >
                <div className="category-icon" data-aos="zoom-in" data-aos-delay={index * 100 + 200}>
                  <div className="icon-placeholder"></div>
                </div>
                <h3>{category}</h3>
                <p>Explore schemes</p>
              </div>
            ))}
          </div>
        </section>

        {/* Featured Schemes with Enhanced Cards */}
        <section className="featured-section">
          <h2 className="section-title" data-aos="fade-up">Featured Schemes</h2>
          <div className="schemes-carousel">
            {currentSchemes.slice(0, 3).map((scheme, index) => (
              <div 
                key={scheme.id} 
                className={`scheme-card premium-card ${scheme.gradient}`}
                data-aos="fade-up"
                data-aos-delay={index * 150}
                data-aos-offset="100"
              >
                <div className="card-glow"></div>
                <div className="card-content">
                  <div className="scheme-header">
                    <div className="scheme-icon-wrapper">
                      <span className="scheme-icon">{scheme.icon}</span>
                    </div>
                    {scheme.isNew && (
                      <span className="scheme-badge pulse" data-aos="zoom-in" data-aos-delay={index * 150 + 200}>
                        NEW
                      </span>
                    )}
                  </div>
                  
                  <h3 className="scheme-title">{scheme.name}</h3>
                  <p className="scheme-category">{scheme.category}</p>
                  <p className="scheme-description">{scheme.description}</p>
                  
                  <div className="scheme-benefits">
                    {scheme.benefits.map((benefit, idx) => (
                      <span 
                        key={idx} 
                        className="benefit-tag glass-effect" 
                        data-aos="fade-right" 
                        data-aos-delay={index * 150 + idx * 50}
                      >
                        <span className="benefit-dot"></span>
                        {benefit}
                      </span>
                    ))}
                  </div>
                  
                  <div className="scheme-footer">
                    <button className="learn-more-btn glass-btn">
                      <span>{currentContent.buttons.learnMore}</span>
                      <svg className="btn-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </button>
                    <button className="apply-btn glow-btn">
                      <span>{currentContent.buttons.applyNow}</span>
                      <div className="btn-shine"></div>
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          <div className="view-all-container" data-aos="fade-up" data-aos-delay="400">
            <button className="view-all-btn">
              {currentContent.buttons.viewAll}
              <svg className="arrow-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
              </svg>
            </button>
          </div>
        </section>
      </main>

      {/* Floating Action Button */}
      <div className="fab-container" data-aos="fade-up" data-aos-delay="1000">
        <button className="fab">
          <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </button>
      </div>
    </div>
  );
};

export default Home;
